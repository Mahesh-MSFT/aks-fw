---
apiVersion: v1
kind: Secret
metadata:
  name: mysqlsecret
type: Opaque
data:
  mysqlpassword: cm9vdA==
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  initdb.sql: |
    CREATE DATABASE IF NOT EXISTS userDB;
    USE userDB;
    CREATE TABLE tblUser (id INT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(256),  password VARCHAR(256));
    INSERT INTO tblUser(username, password) VALUES ('admin', 'admin');

---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
                secretKeyRef:
                  name: mysqlsecret
                  key: mysqlpassword
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      - name: mysql-initdb
      configMap:
        name: mysql-initdb-config

---
apiVersion: v1
kind: Service
metadata:
  name: mysqlsvc
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jsi
spec:
  selector:
    matchLabels:
      app: jsi
  template:
    metadata:
      labels:
        app: jsi
    spec:
      containers:
      - name: jsi
        image: makshacr.azurecr.io/jsi:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: jsi
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: jsi
  type: LoadBalancer
  loadBalancerIP: 110.42.1.100
  ports:
  - port: 80
    targetPort: 8080
